
///********************///
///*    Break Points  *///
///********************///
$screen-xsm: 320px;
$screen-sm: 768px;
$screen-md: 1024px;
$screen-lg: 1280px;
$screen-xlg: 1650px;

$th-fontsize-ratio: 1.35;
$th-large-font: 54;
$th-large-fontsize-ratio: 1.45;

$th-lineheight-ratio: 0.75;
$th-large-lineheight-ratio: 0.7;
$mm-lineheight-ratio: 1.4;

// vw conversion PC
@mixin vw-pc($property, $pc-pixel) {
  @if type-of($pc-pixel) == number {
    #{$property}: $pc-pixel*1px;
    #{$property}: $pc-pixel*100/1440*1vw;
    @media (min-width:$screen-xlg) {
      #{$property}: $pc-pixel*1px;
    }
  }
  @else if type-of($pc-pixel) == string {
    #{$property}: auto;
    @media (min-width:$screen-xlg) {
      #{$property}: auto;
    }
  }
  @else if type-of($pc-pixel) == list {
    $px: ();
    $vw: ();
    @each $value in $pc-pixel {
      @if type-of($value) == number {
        $px: append($px, $value*1px);
        $vw: append($vw, $value*100/1440*1vw);
      }
      @else if type-of($value) == string {
        $px: append($px, auto);
        $vw: append($vw, auto);
      }
    }
    #{$property}: $px;
    #{$property}: $vw;

    $px: ();
    @each $value in $pc-pixel {
      @if type-of($value) == number {
        $px: append($px, $value*1px);
      }
      @else if type-of($value) == string {
        $px: append($px, auto);
      }
    }
    @media (min-width:$screen-xlg) {
      #{$property}: $px;
    }
  }
}

// vw conversion Tablet - for 1280
@mixin vw-tb($property, $tb-pixel){
  @if type-of($tb-pixel) == number {
    @media (max-width: $screen-md) {
      #{$property}: $tb-pixel*1px;
      #{$property}: $tb-pixel*100/1024*1vw;
    }
  }
  @else if type-of($tb-pixel) == string {
    @media (max-width: $screen-md) {
      #{$property}: auto;
    }
  }
  @else if type-of($tb-pixel) == list {
    $px: ();
    $vw: ();
    @each $value in $tb-pixel {
      @if type-of($value) == number {
        $px: append($px, $value*1px);
        $vw: append($vw, $value*100/1024*1vw);
      }
      @else if type-of($value) == string {
        $px: append($px, auto);
        $vw: append($vw, auto);
      }
    }
    @media (max-width: $screen-md) {
      #{$property}:$px;
      #{$property}:$vw;
    }
  }
}


// vw conversion Mobile
@mixin vw-mo($property, $mo-pixel){
  @if type-of($mo-pixel) == number {
    #{$property}: $mo-pixel/375*768*1px;
    #{$property}: $mo-pixel*100/375*1vw;
    @media (max-width:375px) {
      #{$property}: $mo-pixel*1px;
      #{$property}: $mo-pixel*100/375*1vw;
    }
  }
  @else if type-of($mo-pixel) == string {
    #{$property}: auto;
    @media (max-width:375px) {
      #{$property}: auto;
    }
  }
  @else if type-of($mo-pixel) == list {
    $px: ();
    $vw: ();
    @each $value in $mo-pixel {
      @if type-of($value) == number {
        $px: append($px, $value/375*768*1px);
        $vw: append($vw, $value*100/375*1vw);
      }
      @else if type-of($value) == string {
        $px: append($px, auto);
        $vw: append($vw, auto);
      }
    }
    #{$property}:$px;
    #{$property}:$vw;

    $px: ();
    $vw: ();
    @each $value in $mo-pixel {
      @if type-of($value) == number {
        $px: append($px, $value*1px);
        $vw: append($vw, $value*100/375*1vw);
      }
      @else if type-of($value) == string {
        $px: append($px, auto);
        $vw: append($vw, auto);
      }
    }
    @media (max-width:375px) {
      #{$property}:$px;
      #{$property}:$vw;
    }
  }
}


@mixin vw-font-size-pc($pc-pixel) {
  font-size: $pc-pixel*1px;
  font-size: $pc-pixel*100/1440*1vw;
  html[lang^="th"] & {
    font-size: if($pc-pixel > $th-large-font, $pc-pixel*$th-large-fontsize-ratio*1px, $pc-pixel*$th-fontsize-ratio*1px);
    font-size: if($pc-pixel > $th-large-font, $pc-pixel*$th-large-fontsize-ratio*100/1440*1vw, $pc-pixel*$th-fontsize-ratio*100/1440*1vw);
  }
  @media (min-width:$screen-xlg) {
    font-size: $pc-pixel*1px;
    html[lang^="th"] & {
      font-size: if($pc-pixel > $th-large-font, $pc-pixel*$th-large-fontsize-ratio*1px, $pc-pixel*$th-fontsize-ratio*1px);
    }
  }
}

@mixin vw-font-size-tb($tb-pixel) {
  font-size: $tb-pixel*1px;
  font-size: $tb-pixel*100/1024*1vw;
  html[lang^="th"] & {
    font-size: if($tb-pixel > $th-large-font, $tb-pixel*$th-large-fontsize-ratio*1px, $tb-pixel*$th-fontsize-ratio*1px);
    font-size: if($tb-pixel > $th-large-font, $tb-pixel*$th-large-fontsize-ratio*100/1024*1vw, $tb-pixel*$th-fontsize-ratio*100/1024*1vw);
  }
}

@mixin vw-font-size-mo($mo-pixel) {
  font-size: $mo-pixel/360*768*1px;
  font-size: $mo-pixel*100/360*1vw;
  html[lang^="th"] & {
    font-size: if($mo-pixel > $th-large-font/2, $mo-pixel*$th-large-fontsize-ratio/360*768*1px, $mo-pixel*$th-fontsize-ratio/360*768*1px);
    font-size: if($mo-pixel > $th-large-font/2, $mo-pixel*$th-large-fontsize-ratio*100/360*1vw, $mo-pixel*$th-fontsize-ratio*100/360*1vw);
  }
  @media (max-width:360px) {
    font-size: $mo-pixel*1px;
    font-size: $mo-pixel*100/360*1vw;
    html[lang^="th"] & {
      font-size: if($mo-pixel > $th-large-font/2, $mo-pixel*$th-large-fontsize-ratio*1px, $mo-pixel*$th-fontsize-ratio*1px);
      font-size: if($mo-pixel > $th-large-font/2, $mo-pixel*$th-large-fontsize-ratio*100/360*1vw, $mo-pixel*$th-fontsize-ratio*100/360*1vw);
    }
  }
}


// line-height Convertor
@mixin line-height-pc($num,$font-size: 0) {
  line-height: $num;
  html[lang^="th"] & {
    line-height: if( $font-size > $th-large-font, $num*$th-large-lineheight-ratio, $num*$th-lineheight-ratio);
  }
  html[lang^="my"] & {
    //line-height: $num*$mm-lineheight-ratio;
    line-height: if($num < 1.4, 1.4, 1.6);
  }
}
@mixin line-height-tb($num,$font-size: 0) {
  line-height: $num;
  html[lang^="th"] & {
    line-height: if( $font-size > $th-large-font, $num*$th-large-lineheight-ratio, $num*$th-lineheight-ratio);
  }
  html[lang^="my"] & {
    //line-height: $num*$mm-lineheight-ratio;
    line-height: if($num < 1.4, 1.4, 1.6);
  }
}
@mixin line-height-mo($num,$font-size: 0) {
  line-height: $num;
  html[lang^="th"] & {
    line-height: if( $font-size > $th-large-font/2, $num*$th-large-lineheight-ratio, $num*$th-lineheight-ratio);
  }
  html[lang^="my"] & {
    //line-height: $num*$mm-lineheight-ratio;
    line-height: if($num < 1.4, 1.4, 1.6);
  }
}


@mixin vw-border($border, $size, $type, $color) {
  #{$border}: $size*100/375*1vw $type $color;
}